/* Fields */

.hs-form-field {
  margin-bottom: 1.4rem;
}

/* Labels */

form label {
  font-size: 1rem;
  display: block;
  margin-bottom: 0.35rem;
}

/* Form Title */
.form-title {
  margin-bottom: 0;
}

/* Help text */

form legend {
  font-size: 1rem;
}

/* Inputs */

form input[type=text],
form input[type=search],
form input[type=email],
form input[type=password],
form input[type=tel],
form input[type=number],
form input[type=file],
form select,
form textarea {
  display: inline-block;
  font-size: 1rem;
  padding: 0.7rem;
  width: 100%;
}

form textarea {
  resize: vertical;
}

form fieldset {
  max-width: 100% !important;
}

form.hs-form fieldset.form-columns-1 .hs-input {
  width: 100%;
}

/* Inputs - checkbox/radio */

form .inputs-list {
  margin: 0;
  padding: 0;
  list-style: none;
}

form .inputs-list > li {
  display: block;
  margin: 0.7rem 0;
}

form .inputs-list input,
form .inputs-list span {
  vertical-align: middle;
  cursor: default;
}

form input[type=checkbox],
form input[type=radio] {
  cursor: pointer;
  margin-right: 0.35rem;
}

/*  hide the checkbox/radio elements visually, while still making them accessible */

form label input[type="checkbox"]:not([name="globalunsub"]),
form label input[type="radio"] {
	position: absolute;
	opacity: 0;
	z-index: -1;
}

/* creates the custom checkbox/radio button */
form label.hs-form-booleancheckbox-display,
form label.hs-form-checkbox-display,
form label.hs-form-radio-display {
	position: relative;
	display: inline-block;
	padding-left: 36px; /* Adjust to give room for the custom checkbox/radio */
	line-height: 1.7;
	cursor: pointer;
}

/* The ::before pseudo-element creates the box for the checkbox or the circle for the radio button. */

form label.hs-form-booleancheckbox-display::before,
form label.hs-form-checkbox-display::before,
form label.hs-form-radio-display::before {
	content: "";
	position: absolute;
	top: 3px;
	left: 0;
	display: block;
	width: 24px;
	height: 24px;
  transition: all 0.3s;
}

/* Adjust border-radius for the difference between radio and checkbox. */

form label.hs-form-radio-display::before {
  border-radius: 50%; /* For radio, mae it a circle */
}

/* The ::after pseudo-element is used to create the visual representation of the checkmark or the filled circle (for radio buttons) */
form label.hs-form-booleancheckbox-display::after,
form label.hs-form-checkbox-display::after {
	content: "";
	width: 24px;
	height: 24px;
	color: #ffffff;
	text-align: center;
	transform: scale(0); /* Initially hidden */
	position: absolute;
	top: 3px;
	left: 0;
	background-image: url({{ get_asset_url('knossos-starter-theme/images/module-icons/check.svg') }});
	background-repeat: no-repeat;
	background-position: center;
	background-size: 19px;
	transition: all 0.3s;
}

form label.hs-form-radio-display::after {
	content: "";
	width: 12px;
	height: 12px;
	color: #ffffff;
	text-align: center;
	background-color: #000000;
	border-radius: 50%;
	position: absolute;
	top: 9px;
	left: 6px;
	transform: scale(0.5);
	opacity: 0.15;
  transition: all 0.3s;
}

/* handle the checked state when the checkbox/radio is selected. */

form label.hs-form-booleancheckbox-display.checked::after,
form label.hs-form-checkbox-display.checked::after {
	transform: scale(1);
}

form label.hs-form-radio-display.checked::after {
  transform: scale(1);
  opacity: 1;
}

/* Inputs - date picker */

.hs-dateinput {
  position: relative;
}

.hs-dateinput:before {
  content:'\01F4C5';
  position: absolute;
  right: 5%;
  top: 50%;
  transform: translateY(-50%);
}

.fn-date-picker .pika-table thead th {
  color: #FFF;
}

.fn-date-picker td.is-selected .pika-button {
  border-radius: 0;
  box-shadow: none;
}

.fn-date-picker td .pika-button:hover,
.fn-date-picker td .pika-button:focus {
  border-radius: 0 !important;
  color: #FFF;
}

/* Inputs - file picker */

form input[type=file].form-cover-applied {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  cursor: pointer;
}

/* Headings and text */

form .hs-richtext,
form .hs-richtext p {
  font-size: 0.875rem;
  margin: 0 0 1.4rem;
}

form .hs-richtext img {
  max-width: 100% !important;
}

/* GDPR */

.legal-consent-container .hs-form-booleancheckbox-display > span,
.legal-consent-container .hs-form-booleancheckbox-display > span p {
  margin-left: 0px !important;
}

/* Validation */

.hs-form-required {
  color: #EF6B51;
}

.hs-input.invalid.error {
  border-color: #EF6B51;
}

.hs-error-msg {
  color: #EF6B51;
  margin-top: 0.35rem;
}

form .focus-visible {
  outline: -webkit-focus-ring-color auto 1px;
}

/* Submit button */

form input[type=submit],
form .hs-button {
  cursor: pointer;
  display: inline-block;
  text-align: center;
  transition: all 0.15s linear;
  white-space: normal;
}

/* Captcha */

.grecaptcha-badge {
  margin: 0 auto;
}

{% if ( get_asset_version("@hubspot/search_input") == "1" ) %}
  /* Search button input field and suggestions */
  .body-container-wrapper .hs-search-field__button {
    padding: 15px;
  }

  .body-container-wrapper .hs-search-field__bar--button-inline .hs-search-field__button {
    margin-left: 6px;
    margin-bottom: 0;
  }

  .body-container-wrapper .hs-search-field__button svg {
    height: 15px;
    fill: #fff;
  }

  .body-container-wrapper .hs-search-field__bar > form > .hs-search-field__input {
    padding: 10px;
  }

  .body-container-wrapper .hs-search-field__suggestions li a {
    color: #494A52;
    padding: 0.35rem 0.7rem;
    text-decoration: none;
    transition: background-color 0.3s;
  }
{% endif %}
